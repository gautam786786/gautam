apiVersion: v1
kind: Namespace
metadata: 
  name: dev3
--- 
apiVersion: v1
kind: LimitRange
metadata:
  name: default-cpu-mem-limit-range
  namespace: dev3
spec:
  limits:
    - default:
        memory: "512Mi" # If not specified the Container's memory limit is set to 512Mi, which is the default memory limit for the namespace.
        cpu: "500m"  # If not specified default limit is 1 vCPU per container 
      defaultRequest:
        memory: "256Mi" # If not specified default it will take from whatever specified in limits.default.memory
        cpu: "300m" # If not specified default it will take from whatever specified in limits.default.cpu
      type: Container                        
---

# rescource quota that I am allowing 

apiVersion: v1
kind: ResourceQuota
metadata:
  name: ns-resource-quota
  namespace: dev3
spec:
  hard:
    requests.cpu: "1"
    requests.memory: 1Gi
    limits.cpu: "2"
    limits.memory: 2Gi  
    pods: "5"    
    configmaps: "5" 
    persistentvolumeclaims: "5" 
    secrets: "5" 
    services: "5" 

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1-nginx-deployment
  labels:
    app: app1-nginx
  namespace: dev3    
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1-nginx
  template:
    metadata:
      labels:
        app: app1-nginx
    spec:
      containers:
        - name: app1-nginx
          image: stacksimplify/kube-nginxapp1:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: app1-nginx-service
  labels:
    app: app1-nginx
  namespace: dev3    
spec:
  type: LoadBalancer
  selector:
    app: app1-nginx
  ports:
    - port: 80
      targetPort: 80


# Step-01: Create Namespace manifest
# Important Note: File name starts with 00- so that when creating k8s objects namespace will get created first so it don't throw an error.
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: dev3
# Step-02: Create ResourceQuota manifest
# apiVersion: v1
# kind: ResourceQuota
# metadata:
#   name: ns-resource-quota
#   namespace: dev3
# spec:
#   hard:
#     requests.cpu: "1"
#     requests.memory: 1Gi
#     limits.cpu: "2"
#     limits.memory: 2Gi  
#     pods: "5"    
#     configmaps: "5" 
#     persistentvolumeclaims: "5" 
#     secrets: "5" 
#     services: "5"                      
# Step-03: Create k8s objects & Test
# # Create All Objects
# kubectl apply -f kube-manifests/

# # List Pods
# kubectl get pods -n dev3

# # View Pod Specification (CPU & Memory)
# kubectl get pod <pod-name> -o yaml -n dev3

# # Get & Describe Limits
# kubectl get limits -n dev3
# kubectl describe limits default-cpu-mem-limit-range -n dev3

# # Get Resource Quota 
# kubectl get quota -n dev3
# kubectl describe quota ns-resource-quota -n dev3

# # List Service
# kubectl get svc -n dev3

# # Access Application
# http://<Public-IP-from-List-Services-Output>/app1/index.html

# Step-04: Clean-Up
# Delete all k8s objects created as part of this section
# # Delete All
# kubectl delete -f kube-manifests/